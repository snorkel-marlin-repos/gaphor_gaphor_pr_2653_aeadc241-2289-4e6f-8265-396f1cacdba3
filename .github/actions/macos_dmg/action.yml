name: 'Create macOS Application'
description: 'Create and Sign macOS Application Using PyInstaller'
inputs:
  version:
    description: 'Gaphor version number'
    required: true
  base64_encoded_p12:
    description: 'base64_encoded_p12'
    required: true
  certpassword_p12:
    description: 'certpassword_p12'
    required: true
  ac_username:
    description: 'ac_usernmame'
    required: true
  ac_password:
    description: 'ac_password'
    required: true
  sign_app:
    description: 'Build is performed on the main line'
    required: true
outputs:
  artifact:
    description: 'Build artifact'
    value: ${{ steps.dmg.outputs.artifact }}${{ steps.zip.outputs.artifact }}
runs:
  using: composite
  steps:
    - name: Install Build Dependencies
      run: poetry install --only main,packaging --no-interaction
      shell: bash
    - name: Build Wheel
      run: poetry build
      shell: bash
    - name: Create Unsigned macOS Application
      if: inputs.sign_app != 'true'
      run: poetry run poe package
      shell: bash
    - name: Import codesign certificate
      if: inputs.sign_app == 'true'
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ inputs.base64_encoded_p12 }}
        p12-password: ${{ inputs.certpassword_p12 }}
    - name: Create Signed macOS Application
      if: inputs.sign_app == 'true'
      env:
        CODESIGN_IDENTITY: "Developer ID Application: Daniel Yeaw (Z7V37BLNR9)"
      run: poetry run poe package
      shell: bash
    - name: Notarize app
      if: inputs.sign_app == 'true'
      uses: BoundfoxStudios/action-xcode-notarize@v1.1
      with:
        product-path: "_packaging/dist/Gaphor.app"
        appstore-connect-username: ${{ inputs.ac_username }}
        appstore-connect-password: ${{ inputs.ac_password }}
    - name: Staple app
      if: inputs.sign_app == 'true'
      uses: BoundfoxStudios/action-xcode-staple@v1
      with:
        product-path: "_packaging/dist/Gaphor.app"
    - name: Create dmg
      id: dmg
      run: |
        cd _packaging
        create-dmg --volname "Gaphor ${{ inputs.version }}" \
        --background "macos/background.png" \
        --window-pos 200 120 --window-size 700 400 --icon-size 100 \
        --icon "Gaphor.app" 200 240 --hide-extension "Gaphor.app" \
        --app-drop-link 500 240 "dist/Gaphor-${{ inputs.version }}.dmg" \
        "dist/Gaphor.app"
        echo "artifact=Gaphor-${{ inputs.version }}.dmg" >> $GITHUB_OUTPUT
      shell: bash
    - name: Notarize dmg
      if: inputs.sign_app == 'true'
      uses: BoundfoxStudios/action-xcode-notarize@v1.1
      with:
        product-path: "_packaging/dist/Gaphor-${{ inputs.version }}.dmg"
        appstore-connect-username: ${{ inputs.ac_username }}
        appstore-connect-password: ${{ inputs.ac_password }}
        primary-bundle-id: org.gaphor.gaphor
    - name: Staple .dmg
      if: inputs.sign_app == 'true'
      uses: BoundfoxStudios/action-xcode-staple@v1
      with:
        product-path: "_packaging/dist/Gaphor-${{ inputs.version }}.dmg"
    - name: Upload Gaphor-${{ inputs.version }}.dmg
      uses: actions/upload-artifact@v3
      with:
        name: Gaphor-${{ inputs.version }}.dmg
        path: _packaging/dist/Gaphor-${{ inputs.version }}.dmg
    - name: Upload Assets (release only)
      if: github.event_name == 'release'
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release upload ${{ inputs.version }} "_packaging/dist/Gaphor-${{ inputs.version }}.dmg"
      shell: bash
